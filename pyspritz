#!/usr/bin/python2

import pygame
import time
import os
import subprocess


class Constants:
    WHITE = (255, 255, 255)
    GRAY = (40, 40, 40)
    RED = (255, 0, 0)
    WPM = 250.0

    MIDDLE = 300
    HEIGHT = 80

    CONFIG = os.getenv("HOME") + "/.config/wpm"


class SpeedReader:
    def __init__(self):
        self.paused = False
        self.wpm = self.read_wpm()
        self.text = self.get_text_to_read()
        self.init_userinterface()
        self.scroll_text()
        self.save_config()
        time.sleep(1)
        self.close_userinterface()

    def read_wpm(self):
        try:
            wpmfile = open(Constants.CONFIG, "r")
            wpm = float(wpmfile.read())
            wpmfile.close()
            return wpm
        except:
            print "Could not read config file. Creating a new one."
            return 250.0

    def get_text_to_read(self):
        text = subprocess.Popen(['xclip', '-o'], stdout=subprocess.PIPE).communicate()[0]
        text = text.decode("utf-8").strip()
        if len(text) == 0:
            exit(0)
        return text.strip()

    def init_userinterface(self):
        pygame.font.init()
        self.screen = pygame.display.set_mode((800, 200))
        self.background = Constants.WHITE
        self.font = pygame.font.Font("/usr/share/fonts/TTF/DejaVuSans.ttf", 40)

    def close_userinterface(self):
        pygame.display.quit()

    def scroll_text(self):
        self.first = True
        for line in self.text.split("\n"):
            for word in line.strip().split(" "):
                if len(word) == 0:
                    continue

                first, middle, last = self.split_word(word)

                self.screen.fill(self.background)
                self.screen.blit(first, (Constants.MIDDLE - (middle.get_width() / 2) - first.get_width(), Constants.HEIGHT))
                self.screen.blit(middle, (Constants.MIDDLE - (middle.get_width() / 2), Constants.HEIGHT))
                self.screen.blit(last, (Constants.MIDDLE + (middle.get_width() / 2), Constants.HEIGHT))

                pygame.draw.line(self.screen, Constants.RED, (Constants.MIDDLE, 30), (Constants.MIDDLE, 70), 1)
                pygame.draw.line(self.screen, Constants.RED, (Constants.MIDDLE, 130), (Constants.MIDDLE, 170), 1)

                pygame.display.update()
                self.read_event_queue()

                if self.first:
                    time.sleep(1)
                    self.first = False

                while self.paused:
                    self.read_event_queue()
                    time.sleep(0.2)

                if word[-1] == '.':
                    time.sleep(3.0 * 60.0 / self.wpm)

                time.sleep(60.0 / self.wpm)

    def read_event_queue(self):
        events = pygame.event.get()

        for event in events:
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    exit(0)
                if event.key == pygame.K_LEFT:
                    self.wpm -= 25
                if event.key == pygame.K_RIGHT:
                    self.wpm += 25
                if event.key == pygame.K_SPACE:
                    self.paused = not self.paused


    def split_word(self, word):
        part = len(word) * 1 / 3
        first = self.font.render(word[:part], 1, Constants.GRAY)
        middle = self.font.render(word[part], 1, Constants.RED)
        last = self.font.render(word[(part + 1):], 1, Constants.GRAY)
        return first, middle, last

    def save_config(self):
        womp = open(Constants.CONFIG, "w")
        womp.write(str(self.wpm))
        womp.close()


if __name__ == "__main__":
    reader = SpeedReader()
